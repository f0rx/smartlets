name: Release Production apk
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
      - dev
      - release
    types:
      - opened
      - reopened
      - synchronize

jobs:
  build:
    name: Build & Deploy a release APK
    env:
      APP_NAME: "Smartlets"
      GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      RELEASE_TYPE: patch
    runs-on: ubuntu-latest
    outputs:
      bump_tag: ${{ steps.bump_tag.outputs.new_tag }}
      bump_tag_version: ${{ steps.bump_tag.outputs.new_version }}
    steps:
      - name: Fetch Repo HEAD
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Java Environment
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Prepare NDK dir for caching
        run: |
          sudo mkdir -p /usr/local/lib/android/sdk/ndk
          sudo chmod -R 777 /usr/local/lib/android/sdk/ndk
          sudo chown -R $USER:$USER /usr/local/lib/android/sdk/ndk

      - name: NDK Cache
        id: ndk_cache
        uses: actions/cache@v2
        with:
          path: /usr/local/lib/android/sdk/ndk
          key: ${{ runner.os }}-ndk_cache-21.0.6113669

      - name: Install NDK
        if: steps.ndk_cache.outputs.cache-hit != 'true'
        run: echo "y" | sudo ${ANDROID_HOME}/tools/bin/sdkmanager --install "ndk;21.0.6113669" --sdk_root=${ANDROID_SDK_ROOT}

      - name: Set up Flutter Environment
        uses: subosito/flutter-action@v1
        with:
          flutter-version: '1.21.x'
          channel: 'beta'

      - run: flutter pub get
      - run: flutter test
      - run: flutter build apk -t lib/main.dart --release --target-platform android-arm,android-arm64 --split-per-abi --flavor=prod

      - name: Bump version and push tag
        id: bump_tag
        uses: mathieudutour/github-tag-action@v4.5
        with:
          release_branches: .*
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Push APK to Release Tags
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/prod/release/*.apk,build/app/outputs/apk/release/*.apk,build/app/outputs/apk/*"
          name: ${{ env.APP_NAME }}-${{ steps.bump_tag.outputs.new_version }}
          tag: ${{ steps.bump_tag.outputs.new_tag }}
          token: ${{ env.GITHUB_TOKEN }}
          allowUpdates: true
          omitName: false
          omitBody: false

  notify:
    runs-on: ubuntu-latest
    needs: build
    env:
      APP_NAME: "Smartlets"
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    steps:
      - name: Send Slack Notification
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_COLOR: '#FF8845'
          SLACK_TITLE: ${{ env.APP_NAME }} APK release version ${{ needs.build.outputs.bump_tag_version }}
          SLACK_MESSAGE: Version ${{ needs.build.outputs.bump_tag_version }} of ${{ env.APP_NAME }} mobile app is available for download at https://github.com/f0rx/smartlets/releases/tag/${{ needs.build.outputs.bump_tag }}
          SLACK_WEBHOOK: ${{ env.SLACK_WEBHOOK }}
          SLACK_FOOTER: Powered by f0rx
